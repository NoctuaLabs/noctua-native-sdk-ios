stages:
  - bump-version
  - release
  - publish

.bump-version:
  image:
    name: alpine/git
    entrypoint: [""]
  before_script:
    - apk add --no-cache bash curl tar
    - git config --global user.email "gitlab-ci@noctua.gg"
    - git config --global user.name "Noctua Gitlab CI"
    - |
      if ! command -v git-cliff >/dev/null; then
        curl -L "https://github.com/orhun/git-cliff/releases/download/v2.4.0/git-cliff-2.4.0-x86_64-unknown-linux-musl.tar.gz" \
          -o cliff.tar.gz
        tar -xzf cliff.tar.gz
        mv git-cliff-2.4.0/git-cliff /usr/local/bin/
      fi
  variables:
    GIT_STRATEGY: fetch
    GIT_DEPTH: 0

bump-version-ios-sdk:
  extends: .bump-version
  stage: bump-version
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - Package.swift
        - NoctuaSDK/**/*
        - README.md
      when: always
  script: |
    git fetch --tags
    NEW_VERSION=$(git-cliff --include-path "NoctuaSDK/**/*" --include-path "Package.swift" --bumped-version | sed -r "s/^v?//")
    echo "New version: $NEW_VERSION"
    sed -i 's|^// version: ".*"|// version: "'"$NEW_VERSION"'"|' Package.swift
    if [ -n "$(git diff --name-only Package.swift)" ]; then
      git add Package.swift
      git commit -m "bump version to $NEW_VERSION [skip ci]"
      git tag -a "$NEW_VERSION" -m "Release $NEW_VERSION"
      git push "https://$GITLAB_BUILDER_USER:$GITLAB_BUILDER_ACCESS_TOKEN@gitlab.com/evosverse/noctua/noctua-sdk-native-ios.git" \
        HEAD:$CI_COMMIT_BRANCH --follow-tags -o ci.skip
    else
      echo "No version bump required"
    fi

release-ios-sdk:
  extends: .bump-version
  stage: release
  needs: [ bump-version-ios-sdk ]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - Package.swift
        - NoctuaSDK/**/*
        - README.md
      when: manual
  script: |
    git fetch --tags
    git checkout origin/$CI_COMMIT_BRANCH
    NEW_VERSION=$(git-cliff --include-path "NoctuaSDK/**/*" --include-path "Package.swift" --bumped-version | sed -r "s/^v?//")
    echo "Releasing $NEW_VERSION"
    sed -i 's|^// version: ".*"|// version: "'"$NEW_VERSION"'"|' Package.swift
    git add Package.swift
    git-cliff --include-path "NoctuaSDK/**/*" --include-path "Package.swift" --bump > CHANGELOG.md
    git add CHANGELOG.md
    git commit -m "Release $NEW_VERSION"
    git tag -a "$NEW_VERSION" -m "Release $NEW_VERSION"
    git push "https://$GITLAB_BUILDER_USER:$GITLAB_BUILDER_ACCESS_TOKEN@gitlab.com/evosverse/noctua/noctua-sdk-native-ios.git" \
      HEAD:$CI_COMMIT_BRANCH --follow-tags -o ci.skip

publish-ios-sdk:
  stage: publish
  tags: [ macmini ]
  needs: [ release-ios-sdk ]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - Package.swift
        - NoctuaSDK/**/*
        - README.md
      when: on_success
  script: |
    git fetch --tags
    git checkout origin/$CI_COMMIT_BRANCH
    git clean -dxf
    curl -L "https://github.com/orhun/git-cliff/releases/download/v2.4.0/git-cliff-2.4.0-aarch64-apple-darwin.tar.gz" -o git-cliff.tar.gz
    tar -xvf git-cliff.tar.gz
    chmod +x ./git-cliff-2.4.0/git-cliff
    NEW_VERSION=$(./git-cliff-2.4.0/git-cliff --include-path "NoctuaSDK/**/*" --include-path "Package.swift" --bumped-version | sed -r "s/^v?//")
    ./git-cliff-2.4.0/git-cliff --include-path "NoctuaSDK/**/*" --include-path "Package.swift" --latest > GithubRelease.md
    curl -sS https://webi.sh/gh | sh
    source ~/.config/envman/PATH.env || true
    echo "$GITHUB_ACCESS_TOKEN" | gh auth login --with-token
    git remote add github https://github.com/NoctuaLabs/noctua-native-sdk-ios.git || true
    git push github "$NEW_VERSION" || true
    gh release create "$NEW_VERSION" --title "$NEW_VERSION" --notes-file GithubRelease.md || true
    git remote remove github
    echo "âœ… iOS SDK $NEW_VERSION published"